[main]
authc.loginUrl = /login.jsf
authc.usernameParam = appsventas-login-form:j_username
authc.passwordParam = appsventas-login-form:j_password
authc.rememberMeParam = appsventas-login-form:rememberMe
user.loginUrl = /login.jsf
authc.successUrl = /index.html

# password matcher
#sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#sha256Matcher.hashAlgorithmName=SHA-256
#sha256Matcher.hashIterations=500000
passwordMatcher = org.apache.shiro.authc.credential.TempFixPasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService

ds = com.jolbox.bonecp.BoneCPDataSource
ds.driverClass=org.postgresql.Driver
ds.jdbcUrl=jdbc:postgresql://localhost:5434/appsventas
ds.username = postgres
ds.password = root1997

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password FROM SUBJECT WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role_name FROM USERS_ROLES WHERE username = ?
jdbcRealm.permissionsQuery = SELECT permission FROM ROLES_PERMISSIONS WHERE role_name = ?
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource=$ds

securityManager.realms = $jdbcRealm

#cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#securityManager.cacheManager = $cacheManager
#jdbcRealm.authenticationCachingEnabled = true

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/login.jsf = authc
/home.jsf = anon, authc
/logout = logout
#/pages/** = authc
/pages/** = user
